extern double F(double);
/******************************************************************/
/*           Function F (X) , zadavaemaya polzovatelem            */
/******************************************************************/

#ifdef __NEWTON
extern double F1(double);
/******************************************************************/
/*     Proizvodnaya function F (X) , zadavaemaya polzovatelem     */
/******************************************************************/
#endif

double Round (double X,double Delta);
/******************************************************************/
/*   Function Round (X,Delta) , prednaznachena dlya okrugleniya   */
/*                   X c tochnostyu Delta                         */
/******************************************************************/

double BISECT(double Left,double Right,double Eps,int &N);
/******************************************************************/
/* Function BISECT prednaznachenadlya resheniya uravneniya F(X)=0 */
/*    metodom deleniya otrezka popolam. Ispolzovany oboznacheniya:*/
/*      Left - levyi konets promezhutka                           */
/*      Right - pravyi konets promezhutka                         */
/*      Eps - pogreshnost vychisleniya kornya uravneniya;         */
/*      N - chislo iteratsiy                                      */
/******************************************************************/

double ITER(double X0,double Eps,int &N);
/******************************************************************/
/*    Функция ITER предназначена для решения уравнения F(X)=X     */
/*      методом простой итерации. Использованы обозначения:       */
/*      X0 - начальное приближение корня                          */
/*      Eps - погрешность вычисления корня уравнения;             */
/*      N - число итераций                                        */
/******************************************************************/

double HORDA(double Left,double Right,double Eps,int &N);
/******************************************************************/
/*    Функция HORDA предназначена для решения уравнения F(x)=0    */
/*      методом хорд. Использованы обозначения:                   */
/*      Left - левый конец промежутка                             */
/*      Right - правый конец промежутка                           */
/*      Eps - погрешность вычисления корня уравнения;             */
/*      N - число итераций                                        */
/******************************************************************/

double NEWTON (double X,double Eps,int &N);
/******************************************************************/
/*  Функция NEWTON предназначена для решения уравнения F(X)=0     */
/*        методом касательных. Использованы обозначения:          */
/*      X - начальное приближение корня                           */
/*      Eps - погрешность вычисления корня уравнения;             */
/*      N - число итераций                                        */
/******************************************************************/

#include "methods.cpp"
