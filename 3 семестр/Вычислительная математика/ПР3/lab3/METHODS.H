extern double F(double);
/******************************************************************/
/*           Функция F (X) , задаваемая пользователем             */
/******************************************************************/

#ifdef __NEWTON
extern double F1(double);
/******************************************************************/
/*     Производная функции F (X) , задаваемая пользователем       */
/******************************************************************/
#endif

double Round (double X,double Delta);
/******************************************************************/
/*   Функция Round (X,Delta) , предназначена для округления       */
/*                   X с точностью Delta                          */
/******************************************************************/

double BISECT(double Left,double Right,double Eps,int &N);
/******************************************************************/
/*    Функция BISECT предназначена для решения уравнения F(X)=0   */
/*    методом деления отрезка пополам. Использованы обозначения:  */
/*      Left - левый конец промежутка                             */
/*      Right - правый конец промежутка                           */
/*      Eps - погрешность вычисления корня уравнения;             */
/*      N - число итераций                                        */
/******************************************************************/

double ITER(double X0,double Eps,int &N);
/******************************************************************/
/*    Функция ITER предназначена для решения уравнения F(X)=X     */
/*      методом простой итерации. Использованы обозначения:       */
/*      X0 - начальное приближение корня                          */
/*      Eps - погрешность вычисления корня уравнения;             */
/*      N - число итераций                                        */
/******************************************************************/

double HORDA(double Left,double Right,double Eps,int &N);
/******************************************************************/
/*    Функция HORDA предназначена для решения уравнения F(x)=0    */
/*      методом хорд. Использованы обозначения:                   */
/*      Left - левый конец промежутка                             */
/*      Right - правый конец промежутка                           */
/*      Eps - погрешность вычисления корня уравнения;             */
/*      N - число итераций                                        */
/******************************************************************/

double NEWTON (double X,double Eps,int &N);
/******************************************************************/
/*  Функция NEWTON предназначена для решения уравнения F(X)=0     */
/*        методом касательных. Использованы обозначения:          */
/*      X - начальное приближение корня                           */
/*      Eps - погрешность вычисления корня уравнения;             */
/*      N - число итераций                                        */
/******************************************************************/

//#include "methods.cpp"
