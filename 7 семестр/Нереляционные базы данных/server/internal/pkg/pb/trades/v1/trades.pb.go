// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.6.1
// source: trades/v1/trades.proto

package trades_v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_STATUS_UNSPECIFIED Status = 0
	Status_STATUS_PENDING     Status = 1
	Status_STATUS_ACCEPTED    Status = 2
	Status_STATUS_REJECTED    Status = 3
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_PENDING",
		2: "STATUS_ACCEPTED",
		3: "STATUS_REJECTED",
	}
	Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_PENDING":     1,
		"STATUS_ACCEPTED":    2,
		"STATUS_REJECTED":    3,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_trades_v1_trades_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_trades_v1_trades_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_trades_v1_trades_proto_rawDescGZIP(), []int{0}
}

type Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Offerer  *Trade_User `protobuf:"bytes,2,opt,name=offerer,proto3" json:"offerer,omitempty"`
	Accepter *Trade_User `protobuf:"bytes,3,opt,name=accepter,proto3" json:"accepter,omitempty"`
	Status   Status      `protobuf:"varint,4,opt,name=status,proto3,enum=trades.v1.Status" json:"status,omitempty"`
}

func (x *Trade) Reset() {
	*x = Trade{}
	mi := &file_trades_v1_trades_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_trades_v1_trades_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_trades_v1_trades_proto_rawDescGZIP(), []int{0}
}

func (x *Trade) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Trade) GetOfferer() *Trade_User {
	if x != nil {
		return x.Offerer
	}
	return nil
}

func (x *Trade) GetAccepter() *Trade_User {
	if x != nil {
		return x.Accepter
	}
	return nil
}

func (x *Trade) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

type GetTradeInV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTradeInV1Request) Reset() {
	*x = GetTradeInV1Request{}
	mi := &file_trades_v1_trades_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTradeInV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradeInV1Request) ProtoMessage() {}

func (x *GetTradeInV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_trades_v1_trades_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradeInV1Request.ProtoReflect.Descriptor instead.
func (*GetTradeInV1Request) Descriptor() ([]byte, []int) {
	return file_trades_v1_trades_proto_rawDescGZIP(), []int{1}
}

func (x *GetTradeInV1Request) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTradeInV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trade []*Trade `protobuf:"bytes,1,rep,name=trade,proto3" json:"trade,omitempty"`
}

func (x *GetTradeInV1Response) Reset() {
	*x = GetTradeInV1Response{}
	mi := &file_trades_v1_trades_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTradeInV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradeInV1Response) ProtoMessage() {}

func (x *GetTradeInV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_trades_v1_trades_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradeInV1Response.ProtoReflect.Descriptor instead.
func (*GetTradeInV1Response) Descriptor() ([]byte, []int) {
	return file_trades_v1_trades_proto_rawDescGZIP(), []int{2}
}

func (x *GetTradeInV1Response) GetTrade() []*Trade {
	if x != nil {
		return x.Trade
	}
	return nil
}

type GetTradeOutV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTradeOutV1Request) Reset() {
	*x = GetTradeOutV1Request{}
	mi := &file_trades_v1_trades_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTradeOutV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradeOutV1Request) ProtoMessage() {}

func (x *GetTradeOutV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_trades_v1_trades_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradeOutV1Request.ProtoReflect.Descriptor instead.
func (*GetTradeOutV1Request) Descriptor() ([]byte, []int) {
	return file_trades_v1_trades_proto_rawDescGZIP(), []int{3}
}

func (x *GetTradeOutV1Request) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTradeOutV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trade []*Trade `protobuf:"bytes,1,rep,name=trade,proto3" json:"trade,omitempty"`
}

func (x *GetTradeOutV1Response) Reset() {
	*x = GetTradeOutV1Response{}
	mi := &file_trades_v1_trades_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTradeOutV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradeOutV1Response) ProtoMessage() {}

func (x *GetTradeOutV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_trades_v1_trades_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradeOutV1Response.ProtoReflect.Descriptor instead.
func (*GetTradeOutV1Response) Descriptor() ([]byte, []int) {
	return file_trades_v1_trades_proto_rawDescGZIP(), []int{4}
}

func (x *GetTradeOutV1Response) GetTrade() []*Trade {
	if x != nil {
		return x.Trade
	}
	return nil
}

type PostTradeV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OffererId       string `protobuf:"bytes,1,opt,name=offererId,proto3" json:"offererId,omitempty"`
	OffererPlantId  string `protobuf:"bytes,2,opt,name=offererPlantId,proto3" json:"offererPlantId,omitempty"`
	AccepterId      string `protobuf:"bytes,3,opt,name=accepterId,proto3" json:"accepterId,omitempty"`
	AccepterPlantId string `protobuf:"bytes,4,opt,name=accepterPlantId,proto3" json:"accepterPlantId,omitempty"`
}

func (x *PostTradeV1Request) Reset() {
	*x = PostTradeV1Request{}
	mi := &file_trades_v1_trades_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostTradeV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostTradeV1Request) ProtoMessage() {}

func (x *PostTradeV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_trades_v1_trades_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostTradeV1Request.ProtoReflect.Descriptor instead.
func (*PostTradeV1Request) Descriptor() ([]byte, []int) {
	return file_trades_v1_trades_proto_rawDescGZIP(), []int{5}
}

func (x *PostTradeV1Request) GetOffererId() string {
	if x != nil {
		return x.OffererId
	}
	return ""
}

func (x *PostTradeV1Request) GetOffererPlantId() string {
	if x != nil {
		return x.OffererPlantId
	}
	return ""
}

func (x *PostTradeV1Request) GetAccepterId() string {
	if x != nil {
		return x.AccepterId
	}
	return ""
}

func (x *PostTradeV1Request) GetAccepterPlantId() string {
	if x != nil {
		return x.AccepterPlantId
	}
	return ""
}

type PostTradeV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostTradeV1Response) Reset() {
	*x = PostTradeV1Response{}
	mi := &file_trades_v1_trades_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostTradeV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostTradeV1Response) ProtoMessage() {}

func (x *PostTradeV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_trades_v1_trades_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostTradeV1Response.ProtoReflect.Descriptor instead.
func (*PostTradeV1Response) Descriptor() ([]byte, []int) {
	return file_trades_v1_trades_proto_rawDescGZIP(), []int{6}
}

type AcceptTradeV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeId string `protobuf:"bytes,1,opt,name=tradeId,proto3" json:"tradeId,omitempty"`
}

func (x *AcceptTradeV1Request) Reset() {
	*x = AcceptTradeV1Request{}
	mi := &file_trades_v1_trades_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptTradeV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptTradeV1Request) ProtoMessage() {}

func (x *AcceptTradeV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_trades_v1_trades_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptTradeV1Request.ProtoReflect.Descriptor instead.
func (*AcceptTradeV1Request) Descriptor() ([]byte, []int) {
	return file_trades_v1_trades_proto_rawDescGZIP(), []int{7}
}

func (x *AcceptTradeV1Request) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

type AcceptTradeV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptTradeV1Response) Reset() {
	*x = AcceptTradeV1Response{}
	mi := &file_trades_v1_trades_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptTradeV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptTradeV1Response) ProtoMessage() {}

func (x *AcceptTradeV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_trades_v1_trades_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptTradeV1Response.ProtoReflect.Descriptor instead.
func (*AcceptTradeV1Response) Descriptor() ([]byte, []int) {
	return file_trades_v1_trades_proto_rawDescGZIP(), []int{8}
}

type RejectTradeV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeId string `protobuf:"bytes,1,opt,name=tradeId,proto3" json:"tradeId,omitempty"`
}

func (x *RejectTradeV1Request) Reset() {
	*x = RejectTradeV1Request{}
	mi := &file_trades_v1_trades_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectTradeV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTradeV1Request) ProtoMessage() {}

func (x *RejectTradeV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_trades_v1_trades_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTradeV1Request.ProtoReflect.Descriptor instead.
func (*RejectTradeV1Request) Descriptor() ([]byte, []int) {
	return file_trades_v1_trades_proto_rawDescGZIP(), []int{9}
}

func (x *RejectTradeV1Request) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

type RejectTradeV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RejectTradeV1Response) Reset() {
	*x = RejectTradeV1Response{}
	mi := &file_trades_v1_trades_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectTradeV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTradeV1Response) ProtoMessage() {}

func (x *RejectTradeV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_trades_v1_trades_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTradeV1Response.ProtoReflect.Descriptor instead.
func (*RejectTradeV1Response) Descriptor() ([]byte, []int) {
	return file_trades_v1_trades_proto_rawDescGZIP(), []int{10}
}

type PostBuyV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OffererId      string `protobuf:"bytes,1,opt,name=offererId,proto3" json:"offererId,omitempty"`
	OffererPlantId string `protobuf:"bytes,2,opt,name=offererPlantId,proto3" json:"offererPlantId,omitempty"`
	AccepterId     string `protobuf:"bytes,3,opt,name=accepterId,proto3" json:"accepterId,omitempty"`
}

func (x *PostBuyV1Request) Reset() {
	*x = PostBuyV1Request{}
	mi := &file_trades_v1_trades_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostBuyV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostBuyV1Request) ProtoMessage() {}

func (x *PostBuyV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_trades_v1_trades_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostBuyV1Request.ProtoReflect.Descriptor instead.
func (*PostBuyV1Request) Descriptor() ([]byte, []int) {
	return file_trades_v1_trades_proto_rawDescGZIP(), []int{11}
}

func (x *PostBuyV1Request) GetOffererId() string {
	if x != nil {
		return x.OffererId
	}
	return ""
}

func (x *PostBuyV1Request) GetOffererPlantId() string {
	if x != nil {
		return x.OffererPlantId
	}
	return ""
}

func (x *PostBuyV1Request) GetAccepterId() string {
	if x != nil {
		return x.AccepterId
	}
	return ""
}

type PostBuyV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostBuyV1Response) Reset() {
	*x = PostBuyV1Response{}
	mi := &file_trades_v1_trades_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostBuyV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostBuyV1Response) ProtoMessage() {}

func (x *PostBuyV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_trades_v1_trades_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostBuyV1Response.ProtoReflect.Descriptor instead.
func (*PostBuyV1Response) Descriptor() ([]byte, []int) {
	return file_trades_v1_trades_proto_rawDescGZIP(), []int{12}
}

type Trade_Plant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *Trade_Plant) Reset() {
	*x = Trade_Plant{}
	mi := &file_trades_v1_trades_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trade_Plant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade_Plant) ProtoMessage() {}

func (x *Trade_Plant) ProtoReflect() protoreflect.Message {
	mi := &file_trades_v1_trades_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade_Plant.ProtoReflect.Descriptor instead.
func (*Trade_Plant) Descriptor() ([]byte, []int) {
	return file_trades_v1_trades_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Trade_Plant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Trade_Plant) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type Trade_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Surname    string       `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
	FatherName string       `protobuf:"bytes,3,opt,name=fatherName,proto3" json:"fatherName,omitempty"`
	Plant      *Trade_Plant `protobuf:"bytes,4,opt,name=plant,proto3" json:"plant,omitempty"`
}

func (x *Trade_User) Reset() {
	*x = Trade_User{}
	mi := &file_trades_v1_trades_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trade_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade_User) ProtoMessage() {}

func (x *Trade_User) ProtoReflect() protoreflect.Message {
	mi := &file_trades_v1_trades_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade_User.ProtoReflect.Descriptor instead.
func (*Trade_User) Descriptor() ([]byte, []int) {
	return file_trades_v1_trades_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Trade_User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Trade_User) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *Trade_User) GetFatherName() string {
	if x != nil {
		return x.FatherName
	}
	return ""
}

func (x *Trade_User) GetPlant() *Trade_Plant {
	if x != nil {
		return x.Plant
	}
	return nil
}

var File_trades_v1_trades_proto protoreflect.FileDescriptor

var file_trades_v1_trades_proto_rawDesc = []byte{
	0x0a, 0x16, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xde, 0x02, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x08,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x12,
	0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x31, 0x0a, 0x05, 0x50, 0x6c,
	0x61, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x1a, 0x82, 0x01,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6c, 0x61,
	0x6e, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e,
	0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x3f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x75, 0x74,
	0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x05, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x50, 0x6f, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x30, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x56,
	0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x14, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x22, 0x17, 0x0a,
	0x15, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x42, 0x75,
	0x79, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x13, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x42, 0x75, 0x79, 0x56, 0x31, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x5e, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43,
	0x54, 0x45, 0x44, 0x10, 0x03, 0x32, 0x97, 0x05, 0x0a, 0x06, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x12, 0x6b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x56, 0x31,
	0x12, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x2f, 0x69, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6f, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x56, 0x31, 0x12, 0x1f,
	0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x2f, 0x6f, 0x75, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x63,
	0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x56, 0x31, 0x12, 0x1d, 0x2e,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x12, 0x77, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x56, 0x31, 0x12, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22,
	0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2f, 0x61, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x2f, 0x7b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x7d, 0x12, 0x77, 0x0a, 0x0d,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x56, 0x31, 0x12, 0x1f, 0x2e,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x2f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x7b, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x49, 0x64, 0x7d, 0x12, 0x58, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x42, 0x75, 0x79,
	0x56, 0x31, 0x12, 0x1b, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x42, 0x75, 0x79, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x42, 0x75, 0x79, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x22, 0x08, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x75, 0x79, 0x42,
	0x15, 0x5a, 0x13, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trades_v1_trades_proto_rawDescOnce sync.Once
	file_trades_v1_trades_proto_rawDescData = file_trades_v1_trades_proto_rawDesc
)

func file_trades_v1_trades_proto_rawDescGZIP() []byte {
	file_trades_v1_trades_proto_rawDescOnce.Do(func() {
		file_trades_v1_trades_proto_rawDescData = protoimpl.X.CompressGZIP(file_trades_v1_trades_proto_rawDescData)
	})
	return file_trades_v1_trades_proto_rawDescData
}

var file_trades_v1_trades_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_trades_v1_trades_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_trades_v1_trades_proto_goTypes = []any{
	(Status)(0),                   // 0: trades.v1.Status
	(*Trade)(nil),                 // 1: trades.v1.Trade
	(*GetTradeInV1Request)(nil),   // 2: trades.v1.GetTradeInV1Request
	(*GetTradeInV1Response)(nil),  // 3: trades.v1.GetTradeInV1Response
	(*GetTradeOutV1Request)(nil),  // 4: trades.v1.GetTradeOutV1Request
	(*GetTradeOutV1Response)(nil), // 5: trades.v1.GetTradeOutV1Response
	(*PostTradeV1Request)(nil),    // 6: trades.v1.PostTradeV1Request
	(*PostTradeV1Response)(nil),   // 7: trades.v1.PostTradeV1Response
	(*AcceptTradeV1Request)(nil),  // 8: trades.v1.AcceptTradeV1Request
	(*AcceptTradeV1Response)(nil), // 9: trades.v1.AcceptTradeV1Response
	(*RejectTradeV1Request)(nil),  // 10: trades.v1.RejectTradeV1Request
	(*RejectTradeV1Response)(nil), // 11: trades.v1.RejectTradeV1Response
	(*PostBuyV1Request)(nil),      // 12: trades.v1.PostBuyV1Request
	(*PostBuyV1Response)(nil),     // 13: trades.v1.PostBuyV1Response
	(*Trade_Plant)(nil),           // 14: trades.v1.Trade.Plant
	(*Trade_User)(nil),            // 15: trades.v1.Trade.User
}
var file_trades_v1_trades_proto_depIdxs = []int32{
	15, // 0: trades.v1.Trade.offerer:type_name -> trades.v1.Trade.User
	15, // 1: trades.v1.Trade.accepter:type_name -> trades.v1.Trade.User
	0,  // 2: trades.v1.Trade.status:type_name -> trades.v1.Status
	1,  // 3: trades.v1.GetTradeInV1Response.trade:type_name -> trades.v1.Trade
	1,  // 4: trades.v1.GetTradeOutV1Response.trade:type_name -> trades.v1.Trade
	14, // 5: trades.v1.Trade.User.plant:type_name -> trades.v1.Trade.Plant
	2,  // 6: trades.v1.Trades.GetTradeInV1:input_type -> trades.v1.GetTradeInV1Request
	4,  // 7: trades.v1.Trades.GetTradeOutV1:input_type -> trades.v1.GetTradeOutV1Request
	6,  // 8: trades.v1.Trades.PostTradeV1:input_type -> trades.v1.PostTradeV1Request
	8,  // 9: trades.v1.Trades.AcceptTradeV1:input_type -> trades.v1.AcceptTradeV1Request
	10, // 10: trades.v1.Trades.RejectTradeV1:input_type -> trades.v1.RejectTradeV1Request
	12, // 11: trades.v1.Trades.PostBuyV1:input_type -> trades.v1.PostBuyV1Request
	3,  // 12: trades.v1.Trades.GetTradeInV1:output_type -> trades.v1.GetTradeInV1Response
	5,  // 13: trades.v1.Trades.GetTradeOutV1:output_type -> trades.v1.GetTradeOutV1Response
	7,  // 14: trades.v1.Trades.PostTradeV1:output_type -> trades.v1.PostTradeV1Response
	9,  // 15: trades.v1.Trades.AcceptTradeV1:output_type -> trades.v1.AcceptTradeV1Response
	11, // 16: trades.v1.Trades.RejectTradeV1:output_type -> trades.v1.RejectTradeV1Response
	13, // 17: trades.v1.Trades.PostBuyV1:output_type -> trades.v1.PostBuyV1Response
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_trades_v1_trades_proto_init() }
func file_trades_v1_trades_proto_init() {
	if File_trades_v1_trades_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trades_v1_trades_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trades_v1_trades_proto_goTypes,
		DependencyIndexes: file_trades_v1_trades_proto_depIdxs,
		EnumInfos:         file_trades_v1_trades_proto_enumTypes,
		MessageInfos:      file_trades_v1_trades_proto_msgTypes,
	}.Build()
	File_trades_v1_trades_proto = out.File
	file_trades_v1_trades_proto_rawDesc = nil
	file_trades_v1_trades_proto_goTypes = nil
	file_trades_v1_trades_proto_depIdxs = nil
}
